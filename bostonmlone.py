# -*- coding: utf-8 -*-
"""bostonMLOne.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1wKHfm3h_IeBabrBBtWincZV_Z5eaQb9l
"""

# importing our dependencies
import pandas as pd
import numpy as np
from sklearn import linear_model
# sklearn is a machine learing library for python
# linear_model here means using linear regression here
from sklearn.model_selection import train_test_split

# here we are going to load boston housing dataset from sklearn.datasets and print it
from sklearn.datasets import load_boston
boston = load_boston() 
print(boston)

# Transform the dataset into a dataframe
# data = the data we want for the indepent variables also known as the X values
# feaures_name  = column names of the data
# target = target variables for the price of the houses or dependet variables also known as Y value

# df_x will hold x values
df_x = pd.DataFrame(boston.data , columns = boston.feature_names)
# df_y will hold y values
df_y = pd.DataFrame(boston.target)

# Get some statistics from the data set like the count and the name , mean
df_x.describe()

# Intialize the linear regression model
reg = linear_model.LinearRegression()

# 67 % Training and 33% Testing Data
# Split the data into 67% Trainig and 33% Testing
x_train , x_test , y_train , y_test = train_test_split(df_x , df_y , test_size = 0.33 , random_state = 42)

# Train the model with our training Data
reg.fit(x_train , y_train)

# Print the weights/Coeffeicent for the each column/feature of our model
# f(x) = mx+b = y coefficent is m
# f(x , a) = mx+da+b = y 
# here m and d are coefficents

print(reg.coef_)

# Print the predictions on our test data
y_pred = reg.predict(x_test)
print(y_pred)

# Print the actual values
print(y_test)

# Check the model performance accurecy using mean square Error(MSE)
print(np.mean((y_pred - y_test)**2))